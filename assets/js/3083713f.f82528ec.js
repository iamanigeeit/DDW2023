"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[8146],{16248:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/DDW Concept Map-Week 2.drawio-d8efaa65ec95a8ce73ea965efd2a1c1a.png"},63129:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>x,contentTitle:()=>l,default:()=>C,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"analysing-programs","title":"Week 2: Analysing Programs","description":"Concept Map","source":"@site/learning-objectives/02-analysing-programs.md","sourceDirName":".","slug":"/analysing-programs","permalink":"/2023/learning-objectives/analysing-programs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_class_name":"hidden"},"sidebar":"tutorialSidebar","previous":{"title":"Week 1: Python","permalink":"/2023/learning-objectives/python"},"next":{"title":"Week 3: Divide and Conquer","permalink":"/2023/learning-objectives/divide-conquer"}}');var r=a(74848),i=a(28453),t=(a(28548),a(13358),a(73627)),o=a(53833);const c={sidebar_position:2,sidebar_class_name:"hidden"},l="Week 2: Analysing Programs",x={},d=[{value:"Concept Map",id:"concept-map",level:3}];function p(e){const n={h1:"h1",h3:"h3",header:"header",mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"week-2-analysing-programs",children:"Week 2: Analysing Programs"})}),"\n",(0,r.jsx)(o.A,{}),"\n",(0,r.jsx)(n.h3,{id:"concept-map",children:"Concept Map"}),"\n",(0,r.jsx)(t.A,{path:a(16248).A,widthPercentage:"100%"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    A((Week 2<br>Heap and Complexity)) --\x3e |learns| DS((Data Structure))\n    DS --\x3e |learns| BINH((Binary Heap))\n    style BINH color:dodgerblue\n    BINH --\x3e |specific case of| BT((Binary Tree))\n    BINH --\x3e |uses| L((Python's<br>List))\n    BINH --\x3e |access| N((Node))\n    BINH --\x3e |maintains| HPROP((Heap Property))\n    BINH --\x3e |is used in| HS((Heapsort))\n    BINH --\x3e |process| BH((Build Heap))\n    BT --\x3e |specific case of| TR((Tree))\n    BT --\x3e |has two| CHLD((Children))\n    TR --\x3e |has| LF((Leaf))\n    TR --\x3e |has| RT((Root))\n    TR --\x3e |has| N\n    LF --\x3e |is-a| N\n    LF --\x3e |has no| CHLD\n    RT --\x3e |is-a| N\n    N --\x3e |access| PR((Parent))\n    N --\x3e |access| CHLD\n    CHLD --\x3e |access| LTCD((Left Child))\n    CHLD --\x3e |access| RTCD((Right Child))\n    CHLD --\x3e |can be| MAXC((Max-Child))\n    CHLD --\x3e |can be| MINC((Min-Child))\n    HPROP --\x3e |uses| H((Heapify))\n    HPROP --\x3e |can be| MAXHP((Max-Heap))\n    HPROP --\x3e |can be| MINHP((Min-Heap))\n    MAXHP --\x3e |finds| MAXC\n    MINHP --\x3e |finds| MINC\n    A --\x3e |learns| AL((Algorithm))\n    A --\x3e |learns| C((Complexity))\n    style DS color:red\n    style AL color:red\n    style C color:red\n    C --\x3e |learns| AN((Asymptotic<br>Notation))\n    C --\x3e |analyze| HS((Heapsort))\n    style HS color:dodgerblue\n    C --\x3e |describes| CT((Computation<br>Time))\n    style CT color:dodgerblue\n    C --\x3e |uses| CM((Computational<br>Model))\n    AL --\x3e |learns| HS\n    AL --\x3e |implements| BH((Build Heap))\n    AL --\x3e |implements| H((Heapify))\n    BH --\x3e |uses| H\n    AL --\x3e |implements| H\n    AN --\x3e |defines| BGONN((Big-O Notation))\n    BGONN --\x3e |derive for| HS\n    BGONN --\x3e |derive for| BEST((Bubble Sort))\n    BGONN --\x3e |derive for| INST((Insertion Sort))\n    HS --\x3e |runs| LL((log linear))\n    CT --\x3e |for| HS\n    CM --\x3e |derive| CT\n    CT --\x3e |can be| LL\n    CT --\x3e |can be| LC((Logarithmic))\n    CT --\x3e |can be| LR((Linear))\n    LC --\x3e |faster than| LR\n    LR --\x3e |faster than| LL\n    LL --\x3e |faster than| QC((Quadratic))\n    BEST --\x3e |runs| QC\n    CT --\x3e |for| BEST\n    CT --\x3e |for| INST\n    INST --\x3e |runs| QC\n    CT --\x3e |can be| QUBIC((Qubic))\n    QC --\x3e |faster than| QUBIC\n    QUBIC --\x3e |faster than| EXP((Exponential))\n    CT --\x3e |can be | EXP"})]})}function C(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);